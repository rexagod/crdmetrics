/*
Copyright 2024 The Kubernetes custom-resource-state-metrics Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/rexagod/crsm/pkg/apis/crsm/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CustomResourceStateMetricsResourceLister helps list CustomResourceStateMetricsResources.
// All objects returned here must be treated as read-only.
type CustomResourceStateMetricsResourceLister interface {
	// List lists all CustomResourceStateMetricsResources in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CustomResourceStateMetricsResource, err error)
	// CustomResourceStateMetricsResources returns an object that can list and get CustomResourceStateMetricsResources.
	CustomResourceStateMetricsResources(namespace string) CustomResourceStateMetricsResourceNamespaceLister
	CustomResourceStateMetricsResourceListerExpansion
}

// customResourceStateMetricsResourceLister implements the CustomResourceStateMetricsResourceLister interface.
type customResourceStateMetricsResourceLister struct {
	indexer cache.Indexer
}

// NewCustomResourceStateMetricsResourceLister returns a new CustomResourceStateMetricsResourceLister.
func NewCustomResourceStateMetricsResourceLister(indexer cache.Indexer) CustomResourceStateMetricsResourceLister {
	return &customResourceStateMetricsResourceLister{indexer: indexer}
}

// List lists all CustomResourceStateMetricsResources in the indexer.
func (s *customResourceStateMetricsResourceLister) List(selector labels.Selector) (ret []*v1alpha1.CustomResourceStateMetricsResource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomResourceStateMetricsResource))
	})
	return ret, err
}

// CustomResourceStateMetricsResources returns an object that can list and get CustomResourceStateMetricsResources.
func (s *customResourceStateMetricsResourceLister) CustomResourceStateMetricsResources(namespace string) CustomResourceStateMetricsResourceNamespaceLister {
	return customResourceStateMetricsResourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CustomResourceStateMetricsResourceNamespaceLister helps list and get CustomResourceStateMetricsResources.
// All objects returned here must be treated as read-only.
type CustomResourceStateMetricsResourceNamespaceLister interface {
	// List lists all CustomResourceStateMetricsResources in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CustomResourceStateMetricsResource, err error)
	// Get retrieves the CustomResourceStateMetricsResource from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CustomResourceStateMetricsResource, error)
	CustomResourceStateMetricsResourceNamespaceListerExpansion
}

// customResourceStateMetricsResourceNamespaceLister implements the CustomResourceStateMetricsResourceNamespaceLister
// interface.
type customResourceStateMetricsResourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CustomResourceStateMetricsResources in the indexer for a given namespace.
func (s customResourceStateMetricsResourceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CustomResourceStateMetricsResource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomResourceStateMetricsResource))
	})
	return ret, err
}

// Get retrieves the CustomResourceStateMetricsResource from the indexer for a given namespace and name.
func (s customResourceStateMetricsResourceNamespaceLister) Get(name string) (*v1alpha1.CustomResourceStateMetricsResource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("customresourcestatemetricsresource"), name)
	}
	return obj.(*v1alpha1.CustomResourceStateMetricsResource), nil
}
